{
    "swagger": "2.0",
    "info": {
        "version": "1.0.1",
        "title": "Private Static Server"
    },
    "host": "pre-static.istudentapp.ru",
    "tags": [
        {
            "name": "upload",
            "description": "Запросы для выполнения загрузки"
        },
        {
            "name": "get|download",
            "description": "Запросы для получения файла"
        }
    ],
    "schemes": [
        "http"
    ],
    "paths": {
        "/private/upload/avatar": {
            "post": {
                "description": "Загрузка аватара на сервер",
                "parameters": [
                    {
                        "name": "avatar",
                        "in": "formData",
                        "description": "Файл для загрузки",
                        "required": true,
                        "type": "file"
                    }
                ],
                "tags": [
                    "upload"
                ],
                "responses": {
                    "200": {
                        "description": "Фотография успешно добавлена",
                        "schema": {
                            "title": "result",
                            "type": "object",
                            "properties": {
                                "result": {
                                    "type": "boolean"
                                },
                                "id": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Ошибка по вине пользователя(недопустимый формат файла, файл слишком большой или еще что-то). code=400, exception=true, message = описанию ошибки",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "500": {
                        "description": "Серверная ошибка(ошибка соединения с базой данных или еще что-то). code=500, exception=true, message = описанию ошибки. (если в описании указано, что это необработанная ошибка - срочно сообщаем разработчику)",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/private/upload/document": {
            "post": {
                "description": "Загрузка документа для базы знаний",
                "parameters": [
                    {
                        "name": "document",
                        "in": "formData",
                        "description": "Файл для загрузки",
                        "required": true,
                        "type": "file"
                    }
                ],
                "tags": [
                    "upload"
                ],
                "responses": {
                    "200": {
                        "description": "Документ успешно добавлен",
                        "schema": {
                            "title": "result",
                            "type": "object",
                            "properties": {
                                "result": {
                                    "type": "boolean"
                                },
                                "id": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Ошибка по вине пользователя(недопустимый формат файла, файл слишком большой или еще что-то). code=400, exception=true, message = описанию ошибки",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "500": {
                        "description": "Серверная ошибка(ошибка соединения с базой данных или еще что-то). code=500, exception=true, message = описанию ошибки. (если в описании указано, что это необработанная ошибка - срочно сообщаем разработчику)",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/private/upload/photo": {
            "post": {
                "description": "Загрузка фотографии для частного просмотра(фотография внутри диалога) на сервер",
                "parameters": [
                    {
                        "name": "photo",
                        "in": "formData",
                        "description": "Файл для загрузки",
                        "required": true,
                        "type": "file"
                    }
                ],
                "tags": [
                    "upload"
                ],
                "responses": {
                    "200": {
                        "description": "Фотография успешно добавлена",
                        "schema": {
                            "title": "result",
                            "type": "object",
                            "properties": {
                                "result": {
                                    "type": "boolean"
                                },
                                "url": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Ошибка по вине пользователя(недопустимый формат файла, файл слишком большой или еще что-то). code=400, exception=true, message = описанию ошибки",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "500": {
                        "description": "Серверная ошибка(ошибка соединения с базой данных или еще что-то). code=500, exception=true, message = описанию ошибки. (если в описании указано, что это необработанная ошибка - срочно сообщаем разработчику)",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/private/files/{id}": {
            "get": {
                "summary": "Получить файл по урлу",
                "description": "Нужен для получения файла",
                "tags": [
                    "get|download"
                ],
                "schemes": [
                    "http"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Id файла",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Получен файл",
                        "schema": {
                            "type": "file"
                        }
                    },
                    "401": {
                        "description": "Пользователь не авторизован. Действие запрещено",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "404": {
                        "description": "Не найден файл с таким url и доступный для пользователя",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "500": {
                        "description": "Серверная ошибка(если в описании указано, что это необработанная ошибка - срочно сообщаем разработчику)",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/private/documents/download/{id}/{title}": {
            "get": {
                "summary": "Получить документ по урлу",
                "description": "Нужен для получения файла",
                "tags": [
                    "get|download"
                ],
                "schemes": [
                    "http"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Id документа",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "title",
                        "in": "path",
                        "description": "Название, которое будет у скачанного архива",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Получен архив с документов",
                        "schema": {
                            "type": "file"
                        }
                    },
                    "401": {
                        "description": "Пользователь не авторизован. Действие запрещено",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "404": {
                        "description": "Не найден документ с таким url и доступный для пользователя",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "500": {
                        "description": "Серверная ошибка(если в описании указано, что это необработанная ошибка - срочно сообщаем разработчику)",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "Error": {
            "type": "object",
            "properties": {
                "exception": {
                    "type": "boolean"
                },
                "message": {
                    "type": "string"
                },
                "code": {
                    "type": "number"
                }
            }
        }
    }
}