swagger: '2.0'
info:
  title: IStudent API.
  description: Описание API для работы с сервером
  version: "0.1.2"
host: pre-api.istudentapp.ru
schemes:
  - http
tags: 
  - name: Auth
    description: Запросы для выполнения действий, связынных со страницей приветствия(авторизация, регистрация, активация аккаунта и восстановление пароля)
  - name: Documents
    description: Запросы для выполнения действий, связынных c базой знаний
 
# will be prefixed to all paths
basePath: "/"
produces:
  - application/json
paths:
  /auth/signUp:
    post:
      summary: Регистрация нового пользователя
      description: Запрос нужен для создания на сервере нового НЕактивированного пользователя. Так происходит первый шаг регистрации. 
      parameters:
        - name: name
          in: formData
          description: Имя студента
          required: true
          type: string
        - name: surname
          in: formData
          description: Фамилия студента
          required: true
          type: string
        - name: password
          in: formData
          description: Пароль
          required: true
          type: string
        - name: studNumber
          in: formData
          description: Номер студенческого билета
          required: true
          type: string
        - name: year
          in: formData
          description: Курс
          required: true
          type: number
        - name: university
          in: formData
          description: Университет
          required: true
          type: string
        - name: faculty
          in: formData
          description: Факультет
          required: true
          type: string
        - name: group
          in: formData
          description: Группа
          required: false
          type: string
        - name: mail
          in: formData
          description: Почта
          required: true
          type: string

      tags:
        - Auth
      responses:
        200:
          description: Создан неактивированный пользователь
          schema:
            $ref: '#/definitions/noActivatedAnswer'
        400:
          description: Ошибка в случае, если исходные данные не прошли валидацию на стороне сервера
          schema: 
            $ref: '#/definitions/Error'
  /auth/activate:
    get:
      summary: Активировать аккаунт
      description: Нужен для активации аккаунта. Запросом auth/signUp мы создаем неактивированного пользователя, для того, чтобы пользователю была доступна основная функциональность - делается такой запрос. По умолчанию он будет делаться из письма, которое приходит на почту.
      parameters:
        - name: mail
          in: query
          description: Почта, которую хочешь подтвердить
          required: true
          type: string
        - name: key
          in: query
          description: Ключ, которым хочешь подтвердить почту
          required: true
          type: string
      tags:
        - Auth
      responses:
        200:
          description: Подтверждение почты прошло без ошибок. Вернулся результат либо ok, либо failed
          schema:
            $ref: '#/definitions/activateAnswer'
        500:
          description: Внутренняя ошибка
          schema:
            $ref: '#/definitions/Error'
  /auth/resendActivation: 
    post:
      summary: Переотправка кода на почту
      description: Нужен в тех случаях, если письмо до человека не дошло и тд.
      consumes: [
          'application/json'
        ]
      produces: [
        'application/json'
        ]
      parameters: 
        - name: mail
          in: formData
          description: Почта, куда необходимо отправить соответствующий ключ
          type: string
          required: true
      tags:
        - Auth
      responses:
        200:
          description: Все прошло хорошо, то есть если неактивированный аккаунт с почтой был найден и отправлен код или если аккаунт вообще не был найден.
        500:
          description: Ошибка сервера
          schema:
            $ref: '#/definitions/Error'
  /auth/signIn:
    post:
      summary: Авторизация
      description: Нужен для входа уже существующего пользователя
      tags:
        - Auth
      parameters:
        - name: mail
          in: formData
          description: Почта для входа
          type: string
          required: true
        - name: password
          in: formData
          description: Пароль
          type: string
          format: password
          required: true
      responses:
        200:
          description: Авторизация прошла успешно, возвращаем объект пользователя
          schema:
            $ref: '#/definitions/UserInfo'
        401:
          description: Ошибка авторизации(неверный пароль или почта)
          schema:
            $ref: '#/definitions/Error'
        405:
          description: Авторизация прошла успешно, но аккаунт еще не активирован(exception:true, code:405)
          schema:
           $ref: '#/definitions/Error'
        500:
          description: Ошибка сервера
          schema:
            $ref: '#/definitions/Error'
  /auth/forgotPassword:
    post: 
      summary: Забыли пароль
      description: Нужен для отправки на на почту данных для восстановления пароля
      tags: 
        - Auth
      parameters: 
        - name: mail
          in: formData
          description: Почта, аккаунт которой надо восстановить
          type: string
          required: true
      responses:
        200:
          description: Все прошло хорошо, инструкции высланы
        500: 
          description: Произошла внутренняя ошибка сервера
          schema: 
            $ref: '#/definitions/Error'
  /auth/setNewPassword:
    post:
      summary: Задание нового пароля, если старый был забыт
      description: Нужен для задание нового пароля в случае, если пользователь забыл пароль, ему пришли инструкции на почту(ссылка с ключом), он перешел на нее, ключ был провалидирован.
      tags: 
        - Auth
      parameters: 
        - name: mail
          in: formData
          description: Почта, аккаунт которой надо восстановить
          type: string
          required: true
        - name: key
          in: formData
          description: Ключ, который связан с этой почтой для восстановления пароля
          type: string
          required: true
        - name: password
          in: formData
          description: Новый пароль
          type: string
          required: true
      responses:
        200:
          description: Все прошло хорошо, пароль сменен
        500: 
          description: Произошла внутренняя ошибка сервера
          schema: 
            $ref: '#/definitions/Error'
  /auth/logout: 
    post: 
      summary: Выход из сайта/приложения
      description: Нужен для завершения сессии
      tags: 
        - Auth
      responses:
        200: 
          description: ok
        500: 
          description: Произошла ошибка сервера
          schema:
            $ref: '#/definitions/Error'
            
  /documents/addDocument:
    post:
        summary: Добавление нового документа в базу знаний
        description: Нужен для добавления нового документа в базу знаний
        tags: 
          - Documents
        parameters: 
          - name: document
            in: body
            description: Объект документа
            schema: 
              $ref: '#/definitions/documentItemRequest'
            required: true
         
        responses:
          200:
            description: Все прошло хорошо, документ успешно добавлен
            schema:
              $ref: '#/definitions/documentItemResponse'
          401:
            description: Пользователь не авторизован(code = 401)
            schema:
              $ref: '#/definitions/Error'
          405:
            description: Действие запрещено, но аккаунт еще не активирован(exception:true, code:405)
            schema:
              $ref: '#/definitions/Error'
          500: 
            description: Произошла внутренняя ошибка сервера
            schema: 
              $ref: '#/definitions/Error'
  
  /documents/getDocumentsBy:
    get:
      summary: Получение документов по каким-то критериям
      description: Возвращает найденные документы по критериям. Критерии можно комбинировать в любом сочетании
      tags: 
        - Documents
      parameters:
        - name: university
          in: query
          description: Универ, в рамках которого искать работу
          type: string
        - name: faculty
          in: query
          description: Факультет, в рамках которого искать работу
          type: string
        - name: year
          in: query
          description: Курс, в рамках которого искать работу
          type: integer
        - name: subject
          in: query
          description: Предмет, по которому ищется работа
          type: string
        - name: type
          in: query
          description: Тип работы
          type: string
        - name: title
          in: query
          description: Начало названия
          type: string
        - name: skip
          in: query
          description: Сколько пропустить документов в начале
          type: number
          default: 0
      responses:
         200:
            description: Все прошло хорошо, документа найдены
            schema:
              type: array
              items:
                $ref: '#/definitions/documentItemSuggest'
         204:
            description: Все прошло хорошо, но ничего не найдено
         405:
          description: Действие запрещено, так как аккаунт еще не активирован(exception:true, code:405)
          schema:
           $ref: '#/definitions/Error'  
         500:
            description: Произошла внутренняя ошибка сервера
            schema: 
              $ref: '#/definitions/Error' 
              
  /documents/getDocumentById:
    get:
      summary: Получение подробной информации о документе
      description: Нужно для загрузки полной информации о документе
      tags: 
        - Documents
      parameters:
        - name: id
          in: query
          type: string
          description: id документа
          required: true
      responses:
        200:
          description: Все прошло хорошо, документ получен
          schema:
            $ref: '#/definitions/documentItemResponse'
        404:
          description: Документ не найден( code = 404 )
          schema:
            $ref: '#/definitions/Error'
        500:
          description: Ошибка
          schema:
            $ref: '#/definitions/Error'
            
  /documents/getComments:
    get:
      summary: Получение последних 20 комментариев
      description: Получить последние 20 комментариев
      parameters:
        - name: id
          type: string
          in: query
          required: true
        - name: skipFromEnd
          type: integer
          in: query
          required: true
        
      tags:
        - Documents
      responses:
        200:
          description: Все прошло хорошо, комментарии получены
          schema:
            type: array
            items:
              $ref: '#/definitions/commentItem'
        204:
          description: Все прошло хорошо, но комментариев не найдено
          schema:
            type: array
            items:
              type: object
        405:
          description: Действие запрещено, так как аккаунт еще не активирован(exception:true, code:405)
          schema:
           $ref: '#/definitions/Error'  
        404:
          description: Документ не найден( code = 404 )
          schema:
            $ref: '#/definitions/Error'
        500:
          description: Ошибка
          schema:
            $ref: '#/definitions/Error'

  /document/addComment:
     post:
      summary: Добавление нового комментария
      description: Добавление нового комментария к документу.
      parameters: 
          - name: comment
            in: formData
            description: Комментарий
            type: string
            required: true
            
          - name: id
            in: formData
            description: id документа
            type: string
            required: true
            
         
      tags:
        - Documents
      responses:
        200:
          description: Все прошло хорошо, комментарий добавлен
          schema:
              $ref: '#/definitions/commentItem'
        
        404:
          description: Документ не найден( code = 404 )
          schema:
            $ref: '#/definitions/Error'
        405:
          description: Действие запрещено, так как аккаунт еще не активирован(exception:true, code:405)
          schema:
           $ref: '#/definitions/Error'  
        500:
          description: Ошибка
          schema:
            $ref: '#/definitions/Error'
           
  /document/addLike:
     post:
      summary: Добавление like документу
      description: Добавление like документу
      parameters: 
          - name: id
            in: formData
            description: id документа
            type: string
            required: true
      tags:
        - Documents
      responses:
        200:
          description: Все прошло хорошо, like добавлен
          schema:
              type: object
              properties:
                done:
                  type: boolean
                  description: значение - true
        404:
          description: Документ не найден( code = 404 )
          schema:
            $ref: '#/definitions/Error'
        405:
          description: Действие запрещено, так как аккаунт еще не активирован(exception:true, code:405)
          schema:
           $ref: '#/definitions/Error'  
        500:
          description: Ошибка
          schema:
            $ref: '#/definitions/Error'
            
  /document/addDislike:
     post:
      summary: Добавление dislike документу
      description: Добавление dislike документу
      parameters: 
          - name: id
            in: formData
            description: id документа
            type: string
            required: true
      tags:
        - Documents
      responses:
        200:
          description: Все прошло хорошо, dislike добавлен
          schema:
              type: object
              properties:
                done:
                  type: boolean
                  description: значение - true
        404:
           description: Документ не найден( code = 404 )
           schema:
             $ref: '#/definitions/Error'
        405:
          description: Действие запрещено, так как аккаунт еще не активирован(exception:true, code:405)
          schema:
           $ref: '#/definitions/Error'  
        500:
          description: Ошибка
          schema:
            $ref: '#/definitions/Error'
  
  /documents/addPart:
    post:
        summary: Добавление части к документу
        description: Нужен для добавления файлы к объекту документа
        tags: 
          - Documents
        parameters: 
          - name: part
            in: body
            description: Объект части(part)
            schema: 
              $ref: '#/definitions/partItem'
            required: true
         
        responses:
          200:
            description: Все прошло хорошо, часть успешно добавлена к документу
            schema:
              $ref: '#/definitions/documentItemResponse'
          401:
            description: Пользователь не авторизован(code = 401)
            schema:
              $ref: '#/definitions/Error'
          403:
            description: Действие запрещено(либо документ не найден, либо документ не принадлежит пользователю code = 403)
            schema:
              $ref: '#/definitions/Error'
          405:
            description: Действие запрещено, так как аккаунт еще не активирован(exception:true, code:405)
            schema:
              $ref: '#/definitions/Error'
          500: 
            description: Произошла внутренняя ошибка сервера
            schema: 
              $ref: '#/definitions/Error'
  
  /documents/removePart:
    post:
        summary: Удаление части из документа
        description: Нужен для удаления файла из объекта документа
        tags: 
          - Documents
        parameters: 
          - name: partId
            in: formData
            description: id части(part)
            type: string
            required: true
          - name: documentId
            in: formData
            description: id документа
            type: string
            required: true
        responses:
          200:
            description: Все прошло хорошо, часть успешно добавлена к документу
            schema:
              $ref: '#/definitions/documentItemResponse'
          401:
            description: Пользователь не авторизован(code = 401)
            schema:
              $ref: '#/definitions/Error'
          403:
            description: Действие запрещено(либо документ не найден, либо документ не принадлежит пользователю)
            schema:
              $ref: '#/definitions/Error'
          405:
            description: Действие запрещено, так как аккаунт еще не активирован(exception:true, code:405)
            schema:
              $ref: '#/definitions/Error'
          500: 
            description: Произошла внутренняя ошибка сервера
            schema: 
              $ref: '#/definitions/Error'
definitions:
  noActivatedAnswer:
    type: object
    properties:
      name:
        type: string
        description: Имя только что созданного пользователя
      mail: 
        type: string
        description: Почта, на которую отправлено подтверждение
  activateAnswer:
    type: object
    properties:
      result:
        type: string
        description: Результат активации. { ok, failed }
     
  UserInfo:
    type: object
    properties:
      id:
        type: string
        description: Глобальный идентификатор пользователя в системе
      name:
        type: string
        description: Имя
      surname:
        type: string
        description: Фамилия
      photo:
        type: string
        description: Ссылка на фотографию
      year:
        type: number
        description: Курс
      faculty:
        type: string
        description: Факультет
      university:
        type: string
        description: Университет
      group:
        type: number
        description: Группа
        
  partItem:
      type: object
      properties:
        id: 
          type: string
          description: id файла в коллекцтт files
        url:
          type: string
          description: ссылка для доступа к файлу
  
  documentItemRequest:
    type: object
    properties:
      title:
        type: string
        description: Название документа
      search:
        type: object
        description: Информация для поиска
        properties:
          university:
            type: string
            description: Id университета(если не передано, используется универ пользователя)
          faculty:
            type: string
            description: Id факультета(если не передано, используется факультет пользователя)
          subject:
            type: string
            description: Id предмета(из staticData)
          type:
            type: string
            description: Id типа(из staticData)
          year:
            type: integer
            description: Id предмета(из staticData)
      parts:
        type: array
        description: Массив файлов статики
        items: 
          $ref: '#/definitions/partItem'
  documentItemResponse:
    type: object
    properties:
      id: 
        type: string
        description: id документа в коллекции documents
      title:
        type: string
        description: Название документа
      parts:
        type: array
        description: Массив файлов статики
        items: 
          $ref: '#/definitions/partItem'
      author: 
        type: object
        description: Кто добавил
        properties:
          username:
            type: string
            description: Имя пользователя для отображения
          id:
            type: string
            description: id юзера, который добавил
      social:
        type: object
        properties:
          downloads:
            type: integer
            description: Количество скачивание
          watches:
            type: integer
            description: Количество просмотров
          likes:
            type: integer
            description: Количество лайков
          dislikes:
            type: integer
            description: Количество дислайков
      created:
        type: string
        description: Дата добавления
      comments:
        type: array
        items:
          $ref: '#/definitions/commentItem'
        
  documentItemSuggest:
    type: object
    properties:
      id: 
        type: string
        description: id документа в коллекции documents
      title:
        type: string
        description: Название документа
      author: 
        type: object
        description: Кто добавил
        properties:
          username:
            type: string
            description: Имя пользователя для отображения
          id:
            type: string
            description: id юзера, который добавил
      social:
        type: object
        properties:
          downloads:
            type: integer
            description: Количество скачивание
          watches:
            type: integer
            description: Количество просмотров
          likes:
            type: integer
            description: Количество лайков
          dislikes:
            type: integer
            description: Количество дислайков
          relation:
            type: string
            description: Отношение(liked, disliked, none) 
      date:
        type: string
        description: Дата добавления      
  
  commentItem:
    type: object
    properties:
      author:
        type: object
        properties:
          username: 
            type: string
            description: Имя юзера, который оставил комментарий
          id:
            type: string
            description: id пользователя, который оставил комментарий
      text:
        type: string
        description: Текст сообщения
      created:
        type: string
        description: Дата создания
      id:
        type: string
        description: id комменария
        
  commentItemRequest:
    type: object
    properties:
      text:
        type: string
        description: Текст сообщения
      
  Error:
    type: object
    properties:
      exception:
        type: boolean
      message:
        type: string
      code:
        type: number

